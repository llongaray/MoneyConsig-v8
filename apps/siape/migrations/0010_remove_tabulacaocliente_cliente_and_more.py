# Generated by Django 5.1 on 2025-06-20 15:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('siape', '0009_agendamentofichacliente_telefone_contato_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        # Skip field operations - tables don't exist, nothing to remove
        migrations.RunSQL(
            "SELECT 1;",  # No-op SQL command
            reverse_sql="-- Cannot reverse this operation"
        ),
        migrations.CreateModel(
            name='HistoricoTabulacaoAgendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_anterior', models.CharField(blank=True, choices=[('EM_NEGOCIACAO', 'Em Negociação - Padrão'), ('ANALISANDO_PROPOSTA', 'Analisando Proposta'), ('ESPERANDO_DOCUMENTOS', 'Esperando Documentos'), ('REVERSAO', 'Reversão'), ('VENDA_DIGITADA', 'Venda Digitada'), ('CHECAGEM', 'Checagem'), ('FINALIZADA', 'Finalizada')], max_length=25, null=True, verbose_name='Status Anterior')),
                ('status_novo', models.CharField(choices=[('EM_NEGOCIACAO', 'Em Negociação - Padrão'), ('ANALISANDO_PROPOSTA', 'Analisando Proposta'), ('ESPERANDO_DOCUMENTOS', 'Esperando Documentos'), ('REVERSAO', 'Reversão'), ('VENDA_DIGITADA', 'Venda Digitada'), ('CHECAGEM', 'Checagem'), ('FINALIZADA', 'Finalizada')], max_length=25, verbose_name='Status Novo')),
                ('data_alteracao', models.DateTimeField(auto_now_add=True, verbose_name='Data da Alteração')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('agendamento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historico_tabulacoes_agendamento', to='siape.agendamentofichacliente', verbose_name='Agendamento')),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='historico_tabulacoes_agendamento', to=settings.AUTH_USER_MODEL, verbose_name='Usuário que Alterou')),
            ],
            options={
                'verbose_name': 'Histórico de Tabulação do Agendamento',
                'verbose_name_plural': 'Históricos de Tabulações dos Agendamentos',
                'ordering': ['-data_alteracao'],
            },
        ),
        migrations.CreateModel(
            name='TabulacaoAgendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('EM_NEGOCIACAO', 'Em Negociação - Padrão'), ('ANALISANDO_PROPOSTA', 'Analisando Proposta'), ('ESPERANDO_DOCUMENTOS', 'Esperando Documentos'), ('REVERSAO', 'Reversão'), ('VENDA_DIGITADA', 'Venda Digitada'), ('CHECAGEM', 'Checagem'), ('FINALIZADA', 'Finalizada')], default='EM_NEGOCIACAO', max_length=25, verbose_name='Status da Tabulação')),
                ('data_criacao', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('data_atualizacao', models.DateTimeField(auto_now=True, verbose_name='Data de Atualização')),
                ('observacoes', models.TextField(blank=True, null=True, verbose_name='Observações')),
                ('agendamento', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='tabulacao', to='siape.agendamentofichacliente', verbose_name='Agendamento')),
                ('usuario_responsavel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tabulacoes_agendamentos', to=settings.AUTH_USER_MODEL, verbose_name='Usuário Responsável')),
            ],
            options={
                'verbose_name': 'Tabulação do Agendamento',
                'verbose_name_plural': 'Tabulações dos Agendamentos',
                'ordering': ['-data_atualizacao'],
            },
        ),
        # Use raw SQL to safely drop tables that might not exist
        migrations.RunSQL(
            "DROP TABLE IF EXISTS siape_historicotabulacao;",
            reverse_sql="-- Cannot reverse this operation"
        ),
        migrations.RunSQL(
            "DROP TABLE IF EXISTS siape_tabulacaocliente;",
            reverse_sql="-- Cannot reverse this operation"
        ),
        migrations.AddIndex(
            model_name='historicotabulacaoagendamento',
            index=models.Index(fields=['agendamento'], name='siape_histo_agendam_c432e3_idx'),
        ),
        migrations.AddIndex(
            model_name='historicotabulacaoagendamento',
            index=models.Index(fields=['data_alteracao'], name='siape_histo_data_al_ff636b_idx'),
        ),
        migrations.AddIndex(
            model_name='historicotabulacaoagendamento',
            index=models.Index(fields=['status_novo'], name='siape_histo_status__5da354_idx'),
        ),
        migrations.AddIndex(
            model_name='tabulacaoagendamento',
            index=models.Index(fields=['agendamento'], name='siape_tabul_agendam_792089_idx'),
        ),
        migrations.AddIndex(
            model_name='tabulacaoagendamento',
            index=models.Index(fields=['status'], name='siape_tabul_status_c5636f_idx'),
        ),
        migrations.AddIndex(
            model_name='tabulacaoagendamento',
            index=models.Index(fields=['data_atualizacao'], name='siape_tabul_data_at_f0db76_idx'),
        ),
    ]
